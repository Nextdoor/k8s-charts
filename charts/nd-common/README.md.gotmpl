{{ template "chart.header" . }}
{{ template "chart.description" . }}
{{ template "chart.requirementsSection" . }}

{{ template "chart.versionBadge" .  }}{{ template "chart.typeBadge" .  }}{{ template "chart.appVersionBadge" .  }}

**This chart is a [Library Chart](https://helm.sh/docs/topics/library_charts/)** -
this means that the chart itself deploys no resources, and has no `.yaml`
template files. Instead the intention is for this chart to be included inside
another chart, and the functions that it exposes are then available for use.

## [Datadog Functions](templates/_datadog.tpl)

[unified_service_tagging]: https://docs.datadoghq.com/getting_started/tagging/unified_service_tagging/?tab=kubernetes

Each of the functions in the [`templates/_datadog.tpl`](templates/_datadog.tpl)
functions file looks for particularly named values keys. In particular:

* `.Values.datadog.enabled`: This `boolean` parameter will enable or disable the functions documented below.
* `.Values.datadog.env`: Optionally this value will override the ["env" concept in Datadog][unified_service_tagging]
* `.Values.datadog.service`: This string maps to the ["service" concept in Datadog][unified_service_tagging]

### `nd-common.datadogLabels`

This function creates the `tags.datadoghq.com/env`,
`tags.datadoghq.com/service` and `tags.datadoghq.com/version` labels. These
labels should be put within the `spec.template.spec.metadata.labels` key inside
your `Deployment`, `DaemonSet` or `StatefulSet` resources.

_Example Usage_:

```yaml
# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ...
...
spec:
  template:
    metadata:
      labels:
        {{`{{- include "nd-common.datadogLabels" . | nindent 8 }}`}}
```

### `nd-common.datadogEnv`

```yaml
# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ...
...
spec:
  template:
    ...
    spec:
      containers:
        - name: myapp
          env:
            {{`{{- include "nd-common.datadogEnv" . | nindent 12 }}`}}
```

## [Istio Functions](templates/istio.tpl)

### Values Parameters

* `.Values.istio.enabled` (default: `True`): Controls whether or not the Istio
  functions are enabled or disabled. Also used in some other monitoring
  functions.

### `nd-common.istioAnnotations`

_Example Usage_:
# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ...
...
spec:
  template:
    metadata:
      annotations:
        {{`{{- include "nd-common.istioAnnotations" . | nindent 8 }}`}}
```

{{ template "helm-docs.versionFooter" . }}
