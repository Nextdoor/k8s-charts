{{ $destinationServiceSelectorForIstioMetrics     := include "istio-alerts.destinationServiceSelectorForIstioMetrics" . }}
{{ $destinationServiceSelectorForKubeStateMetrics := include "istio-alerts.destinationServiceSelectorForKubeStateMetrics" . }}
{{- $values     := .Values }}
{{- $release    := .Release }}

{{- if .Values.serviceRules.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ .Release.Name }}-{{ lower .Chart.Name }}-service-rules
  annotations:
    nextdoor.com/chart: {{ .Values.chart_name }}
    nextdoor.com/source: {{ .Values.chart_source }}
spec:
  groups:
  - name: {{ .Release.Namespace }}.{{ .Release.Name }}.{{ .Chart.Name }}.IstioServiceRules
    rules:
    {{- with .Values.serviceRules.http5XXMonitor }}
    {{- if .enabled }}
    {{ $http5XXMonitorGroupingLabelString := join ", " .monitorGroupingLabels }}
    - alert: 5xx-Rate-Too-High
      annotations:
        summary: >-
          {{`{{$labels.destination_service_name}} is throwing too many 5xx errors (namespace: {{$labels.namespace}})`}}
        runbook_url: {{ $values.defaults.runbookUrl }}#5xx-Rate-Too-High
        description: >-
          High rate of 5xx responses from the {{`{{$labels.destination_service_name}}`}} VirtualService
          in namespace {{`{{$labels.namespace}}`}}.
      expr: >
        sum by ({{- $http5XXMonitorGroupingLabelString -}}) (
          istio_requests:increase5m{
            response_code=~"5.*",
            {{- $destinationServiceSelectorForIstioMetrics -}}
          }
        )
          /
        sum by ({{- $http5XXMonitorGroupingLabelString -}}) (
          istio_requests:increase5m{
            {{- $destinationServiceSelectorForIstioMetrics -}}
          }
        )
          > {{ .threshold }}
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        namespace: {{ $release.Namespace }}
        {{- with $values.defaults.additionalRuleLabels}}
        {{ toYaml . | nindent 8}}
        {{- end }}
    {{- end }}
    {{- end }}
    {{- with .Values.serviceRules.highRequestLatency }}
    {{- if .enabled }}
    - alert: HighRequestLatency
      annotations:
        summary: >-
          {{`{{$labels.destination_service_name}}`}} avg request latencies are above {{ .threshold }}s!
        runbook_url: {{ $values.defaults.runbookUrl}}#HighRequestLatency
        description: >-
          Average request latency of {{`{{ $value | humanizePercentage }}`}} is above threshold ({{ .threshold }}s)
          in namespace {{`{{ $labels.namespace }}`}} for pod {{`{{ $labels.pod }}`}} (container: {{`{{ $labels.container }}`}}).
      expr: |-
        histogram_quantile(
          {{ .percentile }},
          sum(irate(
            istio_request_duration_milliseconds_bucket{
              {{- $destinationServiceSelectorForIstioMetrics -}}
            }[5m]
          )) by (
            destination_service_name,
            reporter,
            source_canonical_service,
            le
          )
        )
        / 1000
        > {{ .threshold }}
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        namespace: {{ $release.Namespace }}
        {{- with $values.defaults.additionalRuleLabels}}
        {{ toYaml . | nindent 8}}
        {{- end }}
    {{- end }}
    {{- end }}
    {{- with .Values.serviceRules.destinationServiceSelectorValidity }}
    {{- if .enabled }}
    - alert: DestinationServiceSelectorValidity
      annotations:
        summary: >-
          DestinationServiceSelector for istio-alerts is invalid
        runbook_url: {{ $values.defaults.runbookUrl}}#Alert-Rules-Selectors-Validity
        description: >-
          The DestinationServiceSelector used for service level alerts did not return any data.
          Please check the DestinationServiceSelector applied in your istio-alerts chart
          is correct to ensure you are properly selecting your service so that you
          will be alerted for service issues. The current selector is
          `{destination_service_namespace="{{ $release.Namespace }}", destination_service_name="{{ $.Values.serviceRules.destinationServiceName }}"}`.
      expr: >-
        (
          count(
            kube_service_info{
              {{- $destinationServiceSelectorForKubeStateMetrics -}}
            }
          ) or on() vector(0)
        ) == 0
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        namespace: {{ $release.Namespace }}
        {{- with $values.defaults.additionalRuleLabels}}
        {{ toYaml . | nindent 8}}
        {{- end }}
    {{- end }}
    {{- end }}
{{- end }}
