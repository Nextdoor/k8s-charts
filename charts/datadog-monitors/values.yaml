# -- (`string`) Optional shared pagerduty service name for monitors, will turn to a tag for alerts - if not provided, the .Release.name will be used by default
serviceName:
# -- (`string`) Optional shared pagerduty team name for monitors, will turn to a tag for alerts - if not provided, the tag will not be added
team:

# -- (`map[string]interface{}`) List of monitors
# @default -- {}
monitors:
  # -- (`map[string]interface{}`) Required: monitor resource name, Required unique monitor resource name(needed to allow value overrides and used a datadog monitor resource name)
  # @default -- {}
  resourceName:
    # -- (`boolean`) Optional: whether to enable the monitor, defaults to true
    # @default -- true
    enabled: false
    # -- (`string`) Require: monitor name
    # @default -- ""
    name: "[kubernetes] Monitor Kubernetes Failed Pods in Namespaces"
    # -- (`string`) Required: monitor message
    # @default -- ""
    message: "More than ten pods are failing in ({{kube_cluster_name.name}} cluster). \n The threshold of ten pods varies depending on your infrastructure. Change the threshold to suit your needs."
    # -- (`string`) Optional: monitor piority
    # @default -- ""
    priority: "2"
    # -- (`string`) Required: monitor query
    # @default -- ""
    query: "change(avg(last_5m),last_5m):sum:kubernetes_state.pod.status_phase{phase:failed} by {kube_cluster_name,kube_namespace} > 10"
    # -- (`string`) Optional: monitor type, if not specified will default to 'query alert'
    # </br>
    # Datadog monitor types to type values mapping:</br>
    # - anomaly: `query alert`</br>
    # - APM: `query alert` or `trace-analytics alert`</br>
    # - composite: `composite`</br>
    # - custom: `service check`</br>
    # - forecast: `query alert`</br>
    # - host: `service check`</br>
    # - integration: `query alert` or `service check`</br>
    # - live process: `process alert`</br>
    # - logs: `log alert`</br>
    # - metric: `query alert`</br>
    # - network: `service check`</br>
    # - outlier: `query alert`</br>
    # - process: `service check`</br>
    # - rum: `rum alert`</br>
    # - SLO: `slo alert`</br>
    # - watchdog: `event-v2 alert`</br>
    # - event-v2: `event-v2 alert`</br>
    # - audit: `audit alert`</br>
    # - error-tracking: `error-tracking alert`</br>
    # - database-monitoring: `database-monitoring alert`</br>
    # - network-performance: `network-performance alert`</br>
    # - service-discovery: `service-discovery alert`
    type: "query alert"
    # -- (`map[string]string`) Optional: Additional monitor tags(will be added on top of the default tags:service, team, namespace)
    # @default -- `[service:<servicename>, namespace:<namespace>]`
    # example:</br>
    #   tags:</br>
    #     tagname1: tagvalue1</br>
    #     tagname2: tagvalue2</br>
    tags: []
    # -- (`map[string]interface{}`) Optional: monitor options
    # </br>Available options:</br>
    # `thresholds.critical: "1"` # Optional: monitor critical threshold</br>
    # `thresholds.warning: "0.28"` # Optional: monitor warning threshold</br>
    # `evaluationDelay: 300` # Optional: Time in seconds to wait before evaluating the monitor</br>
    # `groupbySimpleMonitor:` false # Optional: A Boolean indicating Whether or not to group by simple monitor, triggers a single alert or multiple alerts when any group breaches the threshold.</br>
    # `includeTags: false` # Optional: A Boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.</br>
    # `newGroupDelay: 300` # Optional: Time in seconds to allow a host to boot and applications to fully start before starting the evaluation.</br>
    # `notifyNoData: false` # Optional: A Boolean indicating whether this monitor notifies when data stops reporting.</br>
    # `noDataTimeframe: 30` # Optional: The number of minutes before a monitor notifies after data stops reporting. Datadog recommends at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks. If omitted, 2x the evaluation timeframe is used for metric alerts, and 24 hours is used for service checks.</br>
    # `renotifyInterval: 0` # Optional: The number of minutes after the last notification before a monitor re-notifies on the current status.</br>
    # `renotifyOccurrences: 0` # Optional: The number of times re-notification messages should be sent on the current status at the provided re-notification interval.</br>
    # `renotifyStatus: []` # Optional: The types of statuses for which re-notification messages should be sent(Valid values are alert, warn, no data).</br>
    # `notifyBy: []` # Optional: List of labels indicating the granularity for a monitor to alert on. Only available for monitors with groupings.</br>
    # `notifyAudit:` False # Optional: A Boolean indicating whether this monitor should notify when an event is audited.</br>
    # `notifyTags: []` # Optional: List of tags to notify on this monitor.</br>
    # `requireFullWindow:` false # Optional: A Boolean indicating whether this monitor requires full window of data before it will fire, We highly recommend you set this to false for sparse metrics, otherwise some evaluations are skipped.</br>
    # `thresholdWindows.recoveryWindow: "10m"` # Optional: Describes how long an anomalous metric must be normal before the alert recovers.</br>
    # `thresholdWindows.alertWindow: "5m"` Optional: Describes how long an anomalous metric must be anomalous before the alert fires.
    # @default -- {}
    options:
      # (`map[string]string`) Optional: monitor thresholds
      # @default -- {}
      # @section -- options
      thresholds:
      #   (`string`) Optional: monitor critical threshold
      # @default -- ""
      # @section -- options
        critical: "1"
      #   (`string`) Optional: monitor warning threshold
      # @default -- ""
      # @section -- options
        warning: "0.28"
      # (`string`) Optional: Time in seconds to wait before evaluating the monitor
      # @default --
      # @section -- options
      evaluationDelay: 300
      # (`boolean`) Optional: A Boolean indicating Whether or not to group by simple monitor, triggers a single alert or multiple alerts when any group breaches the threshold.
      # @default --
      # @section -- options
      groupbySimpleMonitor: false
      # (`boolean`) Optional: A Boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.
      # @default --
      # @section -- options
      includeTags: false
      # (`string`) Optional: Time in seconds to allow a host to boot and applications to fully start before starting the evaluation.
      # @default --
      # @section -- options
      newGroupDelay: 300
      # (`boolean`) Optional: A Boolean indicating whether this monitor notifies when data stops reporting.
      # @default --
      # @section -- options
      notifyNoData: false
      # (`int`) Optional: The number of minutes before a monitor notifies after data stops reporting. Datadog recommends at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks. If omitted, 2x the evaluation timeframe is used for metric alerts, and 24 hours is used for service checks.
      # @default -- "2x evaluation timeframe"
      # @section -- options
      noDataTimeframe: 30
      # (`int`) Optional: The number of minutes after the last notification before a monitor re-notifies on the current status.
      # @default --
      # @section -- options
      renotifyInterval: 0
      # (`string[]`) Optional: The number of times re-notification messages should be sent on the current status at the provided re-notification interval.
      # @default --
      # @section -- options
      renotifyOccurrences: 0
      # (`string[]`) Optional: The types of statuses for which re-notification messages should be sent(Valid values are alert, warn, no data).
      # @default -- []
      # @section -- options
      renotifyStatus: []
      # (`string[]`) Optional: List of labels indicating the granularity for a monitor to alert on. Only available for monitors with groupings.
      # @default -- []
      # @section -- options
      notifyBy: []
      # (`boolean`) Optional: A Boolean indicating whether this monitor requires full window of data before it will fire, We highly recommend you set this to false for sparse metrics, otherwise some evaluations are skipped.
      # @section -- options
      requireFullWindow: false
      # (`map[string]string`) Optional: Threshold windows to finetune alerting
      # @default -- {}
      # @section -- options
      thresholdWindows:
      # (`string`) Optional: Describes how long an anomalous metric must be normal before the alert recovers.
      # @default -- ""
      # @section -- options
        recoveryWindow: "10m"
      # (`string`) Optional: Describes how long an anomalous metric must be anomalous before the alert fires.
      # @default -- ""
      # @section -- options
        alertWindow: "5m"
