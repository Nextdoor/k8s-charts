{{ $values           := .Values }}
{{ $targetNamespace  := .Release.Namespace }}
{{ if .Values.containerRules.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ .Release.Name }}-container-rules
  annotations:
    nextdoor.com/chart: {{ .Values.chart_name }}
    nextdoor.com/source: {{ .Values.chart_source }}
spec:
  groups:
  - name: {{ .Release.Name }}.{{ .Release.Namespace }}.containerRules
    rules:
    {{ with .Values.containerRules.PodContainerTerminated -}}
    - alert: PodContainerTerminated
      annotations:
        summary: {{`Pod {{$labels.pod}} in namespace {{$labels.namespace}} in error status`}}
        runbook_url: {{ $values.defaults.runbookUrl }}#kube-pod-container-terminated
        description: >-
          {{`Pod {{$labels.pod}} in namespace {{$labels.namespace}} has a
          container terminated for more than 10 minutes`}}
      expr: kube_pod_container_status_terminated_reason{reason=~"{{ join "|" .reasons }}", namespace="{{ $targetNamespace }}"} > {{ .threshold }}
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{ end -}}

    {{- with .Values.containerRules.CPUThrottlingHigh }}
    - alert: CPUThrottlingHigh
      annotations:
        summary: Processes experience elevated CPU throttling.
        runbook_url: {{ $values.defaults.runbookUrl }}#CPUThrottlingHigh
        description: >-
          {{`{{ $value | humanizePercentage }} throttling of CPU in
          namespace {{ $labels.namespace }} for container {{ $labels.container
          }} in pod {{ $labels.pod }}.`}}
      expr: |-
        sum(increase(container_cpu_cfs_throttled_periods_total{container!="", namespace=~"{{ $targetNamespace }}"}[5m])) by (container, pod, namespace)
          /
        sum(increase(container_cpu_cfs_periods_total{}[5m])) by (container, pod, namespace)
          > ( {{ .threshold }} / 100 )
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

  #
  # Original Source:
  #    https://raw.githubusercontent.com/prometheus-community/helm-charts/kube-prometheus-stack-13.3.0/charts/kube-prometheus-stack/templates/prometheus/rules-1.14/kubernetes-apps.yaml
  #
  # This file has been modified so that the individual alarms are configurable.
  # The default values for thresholds, periods and severities made these alarms
  # too limited for us.
  #
  - name: {{ .Release.Name }}.{{ .Release.Namespace }}.kubernetesAppsRules
    rules:

    {{ with .Values.containerRules.KubePodCrashLooping -}}
    - alert: KubePodCrashLooping
      annotations:
        summary: Pod is crash looping.
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubepodcrashlooping
        description: >-
          Pod {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.pod {{`}}`}}
          ({{`{{`}} $labels.container {{`}}`}}) is restarting {{`{{`}} printf
          "%.2f" $value {{`}}`}} times / 5 minutes.
      expr: rate(kube_pod_container_status_restarts_total{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[5m]) * 60 * 5 > 0
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubePodNotReady -}}
    - alert: KubePodNotReady
      annotations:
        summary: Pod has been in a non-ready state for more than {{ .for }}
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubepodnotready
        description: >-
          Pod {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.pod {{`}}`}}
          has been in a non-ready state for longer than {{ .for }}.
      expr: |-
        sum by (namespace, pod) (
          max by(namespace, pod) (
            kube_pod_status_phase{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}", phase=~"Pending|Unknown"}
          ) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (
            1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!="Job"})
          )
        ) > 0
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeDeploymentGenerationMismatch -}}
    - alert: KubeDeploymentGenerationMismatch
      annotations:
        summary: Deployment generation mismatch due to possible roll-back
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubedeploymentgenerationmismatch
        description: >-
          Deployment generation for {{`{{`}} $labels.namespace
          {{`}}`}}/{{`{{`}} $labels.deployment {{`}}`}} does not match, this
          indicates that the Deployment has failed but has not been rolled
          back.
      expr: |-
        kube_deployment_status_observed_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          !=
        kube_deployment_metadata_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeDeploymentReplicasMismatch -}}
    - alert: KubeDeploymentReplicasMismatch
      annotations:
        summary: Deployment has not matched the expected number of replicas.
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubedeploymentreplicasmismatch
        description: >-
          Deployment {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}}
          $labels.deployment {{`}}`}} has not matched the expected number of
          replicas for longer than {{ .for }}.
      expr: |-
        (
          kube_deployment_spec_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
            !=
          kube_deployment_status_replicas_available{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
        ) and (
          changes(kube_deployment_status_replicas_updated{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[5m])
            ==
          0
        )
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeStatefulSetReplicasMismatch -}}
    - alert: KubeStatefulSetReplicasMismatch
      annotations:
        summary: StatefulSet has not matched the expected number of replicas.
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubestatefulsetreplicasmismatch
        description: >-
          StatefulSet {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}}
          $labels.statefulset {{`}}`}} has not matched the expected number of
          replicas for longer than 15 minutes.
      expr: |-
        (
          kube_statefulset_status_replicas_ready{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
            !=
          kube_statefulset_status_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
        ) and (
          changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[5m])
            ==
          0
        )
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeStatefulSetGenerationMismatch -}}
    - alert: KubeStatefulSetGenerationMismatch
      annotations:
        summary: StatefulSet generation mismatch due to possible roll-back
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubestatefulsetgenerationmismatch
        description: >-
          StatefulSet generation for {{`{{`}} $labels.namespace
          {{`}}`}}/{{`{{`}} $labels.statefulset {{`}}`}} does not match, this
          indicates that the StatefulSet has failed but has not been rolled
          back.
      expr: |-
        kube_statefulset_status_observed_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          !=
        kube_statefulset_metadata_generation{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeStatefulSetUpdateNotRolledOut -}}
    - alert: KubeStatefulSetUpdateNotRolledOut
      annotations:
        summary: StatefulSet update has not been rolled out.
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubestatefulsetupdatenotrolledout
        description: >-
          StatefulSet {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}}
          $labels.statefulset {{`}}`}} update has not been rolled out.
      expr: |-
        (
          max without (revision) (
            kube_statefulset_status_current_revision{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
              unless
            kube_statefulset_status_update_revision{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          )
            *
          (
            kube_statefulset_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
              !=
            kube_statefulset_status_replicas_updated{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          )
        )  and (
          changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[5m])
            ==
          0
        )
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeDaemonSetRolloutStuck -}}
    - alert: KubeDaemonSetRolloutStuck
      annotations:
        summary: DaemonSet rollout is stuck.
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubedaemonsetrolloutstuck
        description: >-
          DaemonSet {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}}
          $labels.daemonset {{`}}`}} has not finished or progressed for at
          least {{ .for }}.
      expr: |-
        (
          (
            kube_daemonset_status_current_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
             !=
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          ) or (
            kube_daemonset_status_number_misscheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
             !=
            0
          ) or (
            kube_daemonset_updated_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
             !=
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          ) or (
            kube_daemonset_status_number_available{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
             !=
            kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          )
        ) and (
          changes(kube_daemonset_updated_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}[5m])
            ==
          0
        )
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeContainerWaiting -}}
    - alert: KubeContainerWaiting
      annotations:
        summary: Pod container waiting longer than {{ .for }}
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubecontainerwaiting
        description: >-
          Pod {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.pod {{`}}`}}
          container {{`{{`}} $labels.container{{`}}`}} has been in waiting
          state for longer than 1 hour.
      expr: sum by (namespace, pod, container) (kube_pod_container_status_waiting_reason{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}) > 0
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeDaemonSetNotScheduled -}}
    - alert: KubeDaemonSetNotScheduled
      annotations:
        summary: DaemonSet pods are not scheduled.
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubedaemonsetnotscheduled
        description: >-
          '{{`{{`}} $value {{`}}`}} Pods of DaemonSet {{`{{`}}
          $labels.namespace {{`}}`}}/{{`{{`}} $labels.daemonset {{`}}`}} are
          not scheduled.'
      expr: |-
        kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          -
        kube_daemonset_status_current_number_scheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} > 0
      for: 10m
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeDaemonSetMisScheduled -}}
    - alert: KubeDaemonSetMisScheduled
      annotations:
        summary: DaemonSet pods are misscheduled.
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubedaemonsetmisscheduled
        description: >-
          '{{`{{`}} $value {{`}}`}} Pods of DaemonSet {{`{{`}}
          $labels.namespace {{`}}`}}/{{`{{`}} $labels.daemonset {{`}}`}} are
          running where they are not supposed to run.'
      expr: kube_daemonset_status_number_misscheduled{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} > 0
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeJobCompletion -}}
    - alert: KubeJobCompletion
      annotations:
        summary: Job did not complete in time
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubejobcompletion
        description: >-
          Job {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.job_name
          {{`}}`}} is taking more than 12 hours to complete.
      expr: kube_job_spec_completions{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"} - kube_job_status_succeeded{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}  > 0
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeJobFailed -}}
    - alert: KubeJobFailed
      annotations:
        summary: Job failed to complete.
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubejobfailed
        description: >-
          Job {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.job_name
          {{`}}`}} failed to complete. Removing failed job after investigation
          should clear this alert.
      expr: kube_job_failed{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}  > 0
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeHpaReplicasMismatch -}}
    - alert: KubeHpaReplicasMismatch
      annotations:
        summary: HPA has not matched descired number of replicas.
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubehpareplicasmismatch
        description: >-
          HPA {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.hpa {{`}}`}}
          has not matched the desired number of replicas for longer than 15
          minutes.
      expr: |-
        (kube_hpa_status_desired_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          !=
        kube_hpa_status_current_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"})
          and
        (kube_hpa_status_current_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          >
        kube_hpa_spec_min_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"})
          and
        (kube_hpa_status_current_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          <
        kube_hpa_spec_max_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"})
          and
        changes(kube_hpa_status_current_replicas[15m]) == 0
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

    {{ with .Values.containerRules.KubeHpaMaxedOut -}}
    - alert: KubeHpaMaxedOut
      annotations:
        summary: HPA is running at max replicas
        runbook_url: {{ $values.defaults.runbookUrl }}#alert-name-kubehpamaxedout
        description: >-
          HPA {{`{{`}} $labels.namespace {{`}}`}}/{{`{{`}} $labels.hpa {{`}}`}}
          has been running at max replicas for longer than 15 minutes.
      expr: |-
        kube_hpa_status_current_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
          ==
        kube_hpa_spec_max_replicas{job="kube-state-metrics", namespace=~"{{ $targetNamespace }}"}
      for: {{ .for }}
      labels:
        severity: {{ .severity }}
        {{- if $values.defaults.additionalRuleLabels }}
        {{ toYaml $values.defaults.additionalRuleLabels | nindent 8 }}
        {{- end }}
    {{- end }}

{{- end }}
