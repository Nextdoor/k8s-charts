{{ template "chart.header" . }}
{{ template "chart.description" . }}

{{ template "chart.versionBadge" .  }}{{ template "chart.typeBadge" .  }}{{ template "chart.appVersionBadge" .  }}

[elasticache]: https://aws.amazon.com/elasticache/
[serviceentry]: https://istio.io/latest/docs/reference/config/networking/service-entry/
[envoyfilter]: https://istio.io/latest/docs/reference/config/networking/envoy-filter/
[sidecar]: https://istio.io/latest/docs/reference/config/networking/sidecar/
[envoy]: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/other_protocols/redis

This small chart helps configure the [Istio Proxy Sidecar][sidecar] pods in a
given `Namespace` to route traffic to AWS managed [ElastiCache][elasticache]
clusters or services. This assumes that you are running the Istio Service Mesh
inside of your cluster already, and have a need to use [Envoy's
RedisProxy][envoy] configuration to handle traffic routing to the ElastiCache
services.

**Pre-Req: `PILOT_ENABLE_REDIS_FILTER=true` must be set in your Istio Pilot Config**

If you are using the [Istio
Operator](https://istio.io/latest/docs/reference/commands/operator/), your
`IstioOperator` resource must enable the `RedisProxy` filter. This filter
allows Envoy to understand the `REDIS` protocol, and automatically configures
the filter when necessary.

```yaml
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: istio-control-plane
spec:
  components:
    pilot:
      k8s:
        env:
          - name: PILOT_ENABLE_REDIS_FILTER
            value: 'true'

**Pre-Req: `ISTIO_META_DNS_CAPTURE=true` must be set in our Istio Pilot Config**

This relies on the new Istio ["DNS
Capture"](https://istio.io/latest/docs/ops/configuration/traffic-management/dns-proxy)
mode enabled in your environment. If you are running with the `istio-cni`
plugin, then you must also be running Istio 1.11+.
```

## Upgrade Notes

### 0.3.x -> 0.4.x

The previous default `Sidecar` configuration watched _all namespaces and
services_. This configuration is dangerous in large clusters where services may
have thousands of pods behind them, causing the Envoy configuration to be
massively large. This is particularly bad if you have no need to talk to those
services.

The _new default_ is to monitor only your _local namespace_, the `istio-system`
and `istio-gateways` namespaces.

If your service has any dependencies on other mesh-connected services within
the cluster, you must specify those namespaces and services in the
`.Values.sidecar.catchAllHosts` array.

## Usage

### Add to your `Chart.yaml` dependencies:

```diff
  apiVersion: v2
  name: simple-app
  description: Default Microservice Helm Chart
  type: application
  version: 0.7.0
  appVersion: latest
+ dependencies:
+   - name: istio-endpoints
+     repository: https://k8s-charts.nextdoor.com
+     version: {{ template "chart.version" . }}
  maintainers:
    - name: diranged
      email: matt@nextdoor.com
```

### Set up your list of ElastiCache AWS Endpoints

```yaml
# values.yaml
istio-endpoints:
  elasticacheEndpoints:
    test:
      address: staging-cluster.abcd8x.clustercfg.usw2.cache.amazonaws.com
      targetPort: 1234        # required
```

## Per ServiceEndpoint Configurations

### ElastiCache Endpoint Options

 * `targetPort`: Optional override for the target port of the AWS ElastiCache
   Cluster. If you do not specify a value, the
   `Values.defaults.elasticacheTargetPort` value will be applied.

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

{{ template "helm-docs.versionFooter" . }}
