{{ template "chart.header" . }}
{{ template "chart.description" . }}

{{ template "chart.versionBadge" .  }}{{ template "chart.typeBadge" .  }}{{ template "chart.appVersionBadge" .  }}

[elasticache]: https://aws.amazon.com/elasticache/
[serviceentry]: https://istio.io/latest/docs/reference/config/networking/service-entry/
[envoyfilter]: https://istio.io/latest/docs/reference/config/networking/envoy-filter/
[sidecar]: https://istio.io/latest/docs/reference/config/networking/sidecar/
[envoy]: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/other_protocols/redis

This small chart helps configure the [Istio Proxy Sidecar][sidecar] pods in a
given `Namespace` to route traffic to AWS managed [ElastiCache][elasticache]
clusters or services. This assumes that you are running the Istio Service Mesh
inside of your cluster already, and have a need to use [Envoy's
RedisProxy][envoy] configuration to handle traffic routing to the ElastiCache
services.

**Pre-Req: `PILOT_ENABLE_REDIS_FILTER=true` must be set in your Istio Pilot Config**

If you are using the [Istio
Operator](https://istio.io/latest/docs/reference/commands/operator/), your
`IstioOperator` resource must enable the `RedisProxy` filter. This filter
allows Envoy to understand the `REDIS` protocol, and automatically configures
the filter when necessary.

```yaml
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: istio-control-plane
spec:
  components:
    pilot:
      k8s:
        env:
          - name: PILOT_ENABLE_REDIS_FILTER
            value: 'true'
```

## Usage

### Add to your `Chart.yaml` dependencies:

```diff
  apiVersion: v2
  name: simple-app
  description: Default Microservice Helm Chart
  type: application
  version: 0.7.0
  appVersion: latest
+ dependencies:
+   - name: istio-endpoints
+     repository: https://k8s-charts.nextdoor.com
+     version: {{ template "chart.version" . }}
  maintainers:
    - name: diranged
      email: matt@nextdoor.com
```

### Set up your list of ElastiCache AWS Endpoints

```yaml
# values.yaml
istio-endpoints:
  test:
    address: staging-cluster.abcd8x.clustercfg.usw2.cache.amazonaws.com
    bindPort: 1234          # required
    bindAddress: 127.0.0.2  # required
    targetPort: 6379        # optional
    opTimeout: 0.5s         # optional
    readPolicy: REPLICA     # optional
```

## Per ServiceEndpoint Configurations

### ElastiCache Endpoint Options

 * `bindPort`: Required port that the `istio-proxy` sidecar will listen on to
   route traffic to the Redis cluster.
 * `bindAddress`: Required address that the `istio-proxy` idecar will listen on
   to route traffic to the Redis cluster. Suggestion here is to use somethign
   in the loopback-IP space (`172.0.0.0/8`).
 * `targetPort`: Optional override for the target port of the AWS ElastiCache
   Cluster. If you do not specify a value, the
   `Values.defaults.elasticacheTargetPort` value will be applied.
 * `opTimeout`: Optional override for the per-operation timeout that Envoy will
   use to cancel slow operations. If you do not specify a value, the
   `Values.defaults.elasticacheOpTimeout` value will be applied.
 * `readPolicy`: Optional override for the Envoy RedisProxy configuration that
   will route traffic to specific types of endpoints in the backing cluster. If
   you do not specify a value, the `Values.defaults.elasticacheReadPolicy`
   value will be applied.

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

{{ template "helm-docs.versionFooter" . }}
