{{- $global := . }}
{{- range $name, $cfg := index .Values.elasticacheEndpoints }}
{{- $internalHostname := printf "%s.%s" $name (include "istio-endpoints.domainName" $global) }}

---
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: {{ include "istio-endpoints.fullname" $global }}-elasticache-{{ $name }}
  labels:
    {{- include "istio-endpoints.labels" $global | nindent 4 }}
spec:
  {{- /*
  Configure the SerivceEntry to understand that this is a remotely hosted
  service outside of the cluster. The Sidecar will do DNS lookups to discover
  the endpoint addresses. Because the Protocol is set to REDIS below, Envoy
  understands how to connect and actually get the list of endpoints properly.
  */}}
  location: MESH_EXTERNAL
  resolution: DNS

  {{- /*
  The "hosts" entry here creates an internal name inside the namespace that the
  Pods can point to for the service. Istio 1.11+ supports doing this with the
  DNS interception mode turned on.
  */}}
  hosts:
    - {{ $internalHostname }}

  {{- /*
  These ServiceEntries are designed to be accessed only by Pods within the
  application namespace - we are not exposing these to the rest of the cluster.
  */}}
  exportTo:
    - .

  {{- /*
  This configures Istio to look up this target address and keep that as the
  true source of ElastiCache hosts that are part of this cluster.
  */}}
  endpoints:
    - address: {{ $cfg.address }}

  {{- /*
  Inform Istio about the protocol that we are passing here. This is what
  triggers Istio to use the RedisProxy EnvoyFilter.
  */}}
  ports:
    - number: {{ default $global.Values.defaults.elasticacheTargetPort $cfg.targetPort }}
      name: redis
      protocol: REDIS

---

{{- /*
EnvoyFilter's are used to directly patch the final configuration that the
istiod (pilot) container builds for the istio-proxy Sidecar containers. These
patches are applied at the end of the process. We use these to customize the
behavior of the Listeners and Clusters for Redis connections.
*/}}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ include "istio-endpoints.fullname" $global }}-elasticache-{{ $name }}
  labels:
    {{- include "istio-endpoints.labels" $global | nindent 4 }}
spec:
  workloadSelector:
    labels:
      {{- include "istio-endpoints.selectorLabels" $global | nindent 6 }}
  configPatches:
    {{- /*
    Envoy has the ability to health-check the backend Redis hosts individually,
    which helps it keep track of which ones can be used and which cannot. Here
    we patch the CLUSTER config and tell Envoy to use the Redis HealthCheck.
    */}}
    - applyTo: CLUSTER
      match:
        context: SIDECAR_OUTBOUND
        cluster:
          {{- /* Find the Cluster config specifically created by the ServiceEntry above */}}
          service: {{ $internalHostname }}
          port: 6379
      patch:
        operation: MERGE
        value:
          cluster_type:
            name: envoy.clusters.redis
            typed_config:
              "@type": type.googleapis.com/google.protobuf.Struct
              value:
                cluster_refresh_rate: 5s
                cluster_refresh_timeout: 0.5s
          health_checks:
            - custom_health_check:
                name: envoy.health_checkers.redis
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.health_checkers.redis.v3.Redis
              timeout: 0.5s
              interval: 2s
              unhealthy_threshold: 2
              healthy_threshold: 1

---

{{- /*
DestinationRules can customize the connection behavior that the EnvoyFilter
(RedisProxy) uses when connecting to the backends ... connection timeouts, TLS
settings, etc.
*/}}
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: {{ include "istio-endpoints.fullname" $global }}-elasticache-{{ $name }}
  labels:
    {{- include "istio-endpoints.labels" $global | nindent 4 }}
spec:
  {{- /*
  This matches the ServiceEntry "hosts" name, telling Istio which destination
  to apply these custom rules to.
  */}}
  host: {{ $internalHostname }}

  {{- /*
  These ServiceEntries are designed to be accessed only by Pods within the
  application namespace - we are not exposing these to the rest of the cluster.
  */}}
  exportTo:
    - .

  {{- /*
  Customize the connection settings, outlier detection, etc

  TODO - Allow customization of the below settings.
  */}}
  trafficPolicy:
    {{- /* https://istio.io/latest/docs/reference/config/networking/destination-rule/#ConnectionPoolSettings-TCPSettings */}}
    connectionPool:
      tcp:
        {{- /* TCP connection timeout. format: 1h/1m/1s/1ms. MUST BE >=1ms. Default is 10s.*/}}
        connectTimeout: 500ms
        tcpKeepalive:
          time: 300s
          interval: 60s
---
{{- end }}
