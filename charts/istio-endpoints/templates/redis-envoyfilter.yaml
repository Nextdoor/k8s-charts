{{- if and .Values.elasticacheEndpoints .Values.createDefaultElasticacheEnvoyFilter }}
{{- /*
EnvoyFilter's are used to directly patch the final configuration that the
istiod (pilot) container builds for the istio-proxy Sidecar containers. These
patches are applied at the end of the process. We use these to customize the
behavior of the Listeners and Clusters for Redis connections.
*/}}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ include "istio-endpoints.fullname" . }}-elasticache-defaults
  labels:
    {{- include "istio-endpoints.labels" . | nindent 4 }}
spec:
  workloadSelector:
    labels:
      {{- include "istio-endpoints.selectorLabels" . | nindent 6 }}
  configPatches:
    {{- /*
    This first patch is applying custom settings to the RedisProxy Envoy
    Filter. Each setting is documented below. This patch is optionally enabled
    - it would be better to apply this at the cluster level so that it is
    consistent everywhere, but for the purpose of local-dev testing, or
    customizing a particular namespace, we let you add it here.
    */}}
    - applyTo: NETWORK_FILTER

      {{- /*
      We match all redis_proxy filters for this particular container (whichever
      pods match the workloadSelector above.
      */}}
      match:
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.redis_proxy

      {{- /*
      Customize the behavior of the RedisProxy filter.
      https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/redis_proxy/v3/redis_proxy.proto

      Unfortunately, the GoLang proto.merge function that Istio uses does a bad
      job of merging numbers. This prevents us from adjusting the OpTimeout
      which defaults to 5s. If we try to MERGE a new number in, proto.merge
      apparently ADDS THEM TOGETHER. Because of this, we actually replace the
      entire generated Filter here with our own.

      https://github.com/istio/istio/blob/1.10.0/pilot/pkg/networking/core/v1alpha3/networkfilter.go#L211
      */}}
      patch:
        operation: MERGE
        value:
          name: envoy.filters.network.redis_proxy
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.redis_proxy.v3.RedisProxy
            settings:
              {{- /*
              (Duration, REQUIRED) Per-operation timeout in milliseconds. The
              timer starts when the first command of a pipeline is written to
              the backend connection. Each response received from Redis resets
              the timer since it signifies that the next command is being
              processed by the backend. The only exception to this behavior is
              when a connection to a backend is not yet established. In that
              case, the connect timeout on the cluster will govern the timeout
              until the connection is ready.

              Note: Disabled for now, when operation type is MERGE, this value
              gets _added_ to the default value (5s). That is not what we
              want.
              # op_timeout: {{ default .Values.defaults.elasticacheOpTimeout .opTimeout | quote }}
              */}}

              {{- /*
              (bool) Accept moved and ask redirection errors from upstream
              redis servers, and retry commands to the specified target server.
              The target server does not need to be known to the cluster
              manager. If the command cannot be redirected, then the original
              error is passed downstream unchanged. By default, this support is
              not enabled.

              TLDR - this hides the fact that it is a Redis Cluster from the
              client, and the client can simply issue standard calls thinking
              that it is a single large host.
              */}}
              enable_redirection: true

              {{- /*
              (bool) Enable per-command statistics per upstream cluster,
              in addition to the filter level aggregate count. These commands
              are measured in microseconds.
              */}}
              enable_command_stats: true

              {{- /*
              "https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/network/redis_proxy/v3/redis_proxy.proto#envoy-v3-api-enum-extensions-filters-network-redis-proxy-v3-redisproxy-connpoolsettings-readpolicy"

              We default to reading from any available Redis Replica. Other
              options are MASTER (default), PREFER_MASTER, PREFER_REPLICA and
              REPLICA.
              */}}
              read_policy: {{ .Values.defaults.elasticacheReadPolicy | quote }}
{{- end }}
