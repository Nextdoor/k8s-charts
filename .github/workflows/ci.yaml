name: Lint and Test Charts

on:
  pull_request:
    paths:
      - 'charts/**'

jobs:
  helm-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up helm-docs
        uses: envoy/install-helm-docs@v1.0.0
        with:
          version: 1.11.0
      - name: Run helm-docs
        run: helm-docs && git diff --exit-code

  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.5.0

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct --config ct.yaml list-changed)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
          if [[ "$changed" == *"rollout-app"* ]]; then
            echo "::set-output name=rollout::true"
          fi
          if [[ "$changed" == *"simple-workflow"* ]]; then
            echo "::set-output name=simple-workflow::true"
          fi

      - name: Run chart-testing (lint)
        run: ct --config ct.yaml lint

      - name: Create kind cluster
        uses: helm/kind-action@v1.3.0
        with:
          node_image: kindest/node:v1.23.6
        if: steps.list-changed.outputs.changed == 'true'

      - name: Install Argo Rollouts Controller
        if: steps.list-changed.outputs.rollout == 'true'
        run: |
          make -C charts/rollout-app install_rollouts

      - name: Install Argo Workflow Controller
        if: steps.list-changed.outputs.simple-workflow == 'true'
        run: |
          make -C charts/simple-workflow install_argo_workflow

      - name: Install CRDs
        if: steps.list-changed.outputs.changed == 'true'
        run: make crds

      - name: Wait
        if: steps.list-changed.outputs.changed == 'true'
        run: sleep 1

      - name: Run chart-testing (install)
        run: ct --config ct.yaml install
